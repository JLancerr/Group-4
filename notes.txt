Notes for the Frontend:
    - Each files listed here will be sent variables from the backend
    - Use these variables with Jinja to display information coming from the backend
    - The files here will also send data back to the backend
    - NOTE THAT THE FRONTEND MUST USE THE EXACT NAMES OF EACH VARIABLE LISTED HERE 
        - also note that baka may mali akong nalagay na names jan, if may inconsitency, pasabi nalang

- home.html
    - Description of this file
        - Ito paglalagyan ng classrooms
        - Note that hindi ko isesend dito yung mga users na nakajoin sa bawat classroom, para makita yun, need pumasok sa isang classroom, so essentially, sa subjects.html makikita yun

    - Data that the backend will be sending to this file:
        user_data{
            'user_id': user_id, 
            'first_name': first_name, 
            'last_name':  last_name, 
            'username':  username, 
            'password':  password
        }

        classrooms_info[
            { directory_id : classroom_name }, # Classroom list that logined user authors
            { directory_id : classroom_name } # Doesn't contain classrooms user is authoring, they're part of the previous dict
        ]

    - Data that the backend expects to receive from this file:
        - To display the subjects of a clicked classroom directory
            - Send to route '/display'
            - Method is GET request
            - With these data variables
                - directory_type = "classroom" 
                - directory_id = the id of the classroom that the user clicked on
        
        - To add a new classroom
            - Send to route '/add_directory'
            - Method is POST request
            - With these data variables 
                - directory_type
                - directory_name = the name of the classroom that that is inputted by the user 

        - To join classroom
            - Route '/join_classroom'
            - POST request
            - With these data variables
                - directory_id = # The classroom id the user inputted

        - To rename a classroom that the user authors
            - Ipakita lang ang option kung author sila ha
            - Send to route '/edit_directory'
            - Method is POST request
            - With these data variables 
                - directory_type = "classroom"
                - directory_id = 
                - new_classroom_name = whatever the new name of classroom that user inputted

        - To delete a classroom that the user authors
            - First of all, ipapakita niyo lang yung delete option kung si user ay isang author ng classroom na iyon
                - Para malaman kung author ba sila non
                    - Dapat nasa authored_classrooms 
                    - So essentially, lahat ng classrooms na nasa authored_classrooms lang ang bibigyan niyo ng delete option
            - Send to route '/delete_directory'
            - Method is POST request
            - With these data variables 
                - directory_type = "classroom"
                - directory_id = whatever the id of that classroom

- subjects.html 
    - Description of this file
        - Lagayan ng subjects
        - Dito na rin ididisplay lahat ng users na nakajoin sa classroom
    
    - Data that the backend will be sending to these files:
        user_data{
            'user_id': user_id, 
            'first_name': first_name, 
            'last_name':  last_name, 
            'username':  username, 
            'password':  password
        } # Data of the user logged in

        contents[ 
                subjects_names_and_ids[ [subject_id, subject_name] ], 
                names_of_users_joined[ [id, first_name, last_name, username, is_author(True or False)] ],
                ]

        authored = 1 or 0 # Ito yung magdedetermine kung magpapakita ba kayo ng edit options 

        parent_directory_type
        parent_directory_id
        parent_directory_name

    - Data that the backend expects to receive from this file:
        - To display the lessons of a clicked lesson directory
            - Send to route '/display'
            - Method is GET request
            - With these data variables
                - directory_type = "subject" 
                - directory_id = the id of the subject that the user clicked on

        - To add a new subject
            - Send to route '/add_directory'
            - Method is POST request
            - With these data variables 
                - directory_type = "subject"
                - directory_name = the name of the classroom that that is inputted by the user 
                - parent_id = {{ parent_directory_id }} backend will be sending this variable, just access it with jinja

        - To delete a subject
            - Again, ipakita lang ang delete option kung sila ang author
            - Send to route '/delete_directory'
            - Method is POST request
            - With these data variables 
                - directory_id = whatever the id of that subject to delete
                - directory_type = "subject"

        - To rename a subject that the user authors
            - Ipakita lang ang option kung author sila ha
            - Send to route '/edit_directory'
            - Method is POST request
            - With these data variables 
                - directory_type = "subject"
                - directory_id = yung id boi
                - new_directory_name = whatever the new name of subject that user inputted

        - To leave classroom
            - Route '/leave_classroom'
            - POST request
            - With these data variables
                - directory_id = 

        - To kick a user
            - Route '/kick_user'
            - POST request
            - With these data variables
                - user_id_to_kick = # The user's id to kick
                - directory_id = 

- lessons.html  
    - Description of this file
        - Lagayan ng lessons
        
    - Data that the backend will be sending to this file:
        contents [ [lesson_id, lesson_name] ] # List of lesson info

        authored = 1 or 0 # Ito yung magdedetermine kung magpapakita ba kayo ng edit options 

        parent_directory_type
        parent_directory_id
        parent_directory_name

    - Data that the backend expects to receive from this file:
        - To display the answers and quizzes/flashcards of a clicked question directory
            - Send to route '/display'
            - Method is GET request
            - With these data variables
                - directory_type = "lesson" 
                - directory_id = the id of the lesson that the user clicked on

        - To add a new lesson
            - Send to route '/add_directory'
            - Method is POST request
            - With these data variables 
                - directory_type = "lesson"
                - directory_name = the name of the lesson that that is inputted by the user 
                - parent_id = {{ parent_directory_id }} backend will be sending this variable, just access it with jinja

        - To rename a subject that the user authors
            - Ipakita lang ang option kung author sila ha
            - Send to route '/edit_directory'
            - Method is POST request
            - With these data variables 
                - directory_id = "lesson"
                - new_directory_name = whatever the new name of lesson that user inputted

        - To delete a lesson
            - Again, ipakita lang ang delete option kung sila ang author
            - Send to route '/delete_directory'
            - Method is POST request
            - With these data variables 
                - directory_type = "lesson"
                - directory_id = whatever the id of that lesson to delete

- questions.html
    - Description of this file
        - Lagayan ng mga flashcards and quizzes

    - Data that the backend will be sending to this file:
        user_data{
            'user_id': user_id, 
            'first_name': first_name, 
            'last_name':  last_name, 
            'username':  username, 
            'password':  password
        }
        contents[ [question_id, question, answer] ]

        authored = 1 or 0 # Ito yung magdedetermine kung magpapakita ba kayo ng edit options 

        parent_directory_type
        parent_directory_id
        parent_directory_name

    - Data that the backend expects to receive from this file:
        - To delete a question
            - Again, ipakita lang ang delete option kung sila ang author
            - Send to route '/delete_directory'
            - Method is POST request
            - With these data variables 
                - directory_type = "question"
                - directory_id = whatever the id of that question to delete
                - parent_id = {{ parent_directory_id }}
        - To change question or answer  
            - Again, ipakita lang ang delete option kung sila ang author
            - Send to route '/edit_directory'
            - Method is POST request
            - With these data variables 
                - directory_type = "question"
                - directory_id = whatever the id of that question to change
                - new_question = inputted by the user
                - new_answer = inputted by the user
                    - Note that hindi naman kaylangan maginput ni user in both new_question and new_answer, kahit isa oks lang
                - parent_id = {{ parent_directory_id }}

        - To go to a flashcard, multiple choice, or identification page
            - Send to route '/quiz'
            - Method is GET request
            - With these data variables
                - parent_id = {{ parent_directory_id }}
                - quiz_type = 'flashcard' or 'identification' or 'multiple_choice'

- flashcard.html or identifaction.html or multiplechoice.html
    - Data that the backend will be sending to this file:
        contents[ [question_id, question, answer] ]

GOODLUCK HARRY! 
